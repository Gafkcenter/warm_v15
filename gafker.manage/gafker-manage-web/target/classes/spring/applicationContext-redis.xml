<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd ">
<!-- 配置方式一一一一一一目前没有使用 -->
	<!--// 构建连接池配置信息 
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		// 最大连接数 
		<property name="maxTotal" value="${redis.maxTotal}"/>
	</bean>
	
	// 定义集群连接池
	 
	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" destroy-method="close">
		// 第一个参数
		<constructor-arg index="0" ref="jedisPoolConfig"/>
		<constructor-arg index="1">
			<list>
				// 第一个节点 
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.node1.ip}"/>
					<constructor-arg index="1" value="${redis.node1.port}"/>
					<property name="password" value="${redis.node1.password}"/>
				</bean>
				// 第二个节点 -->
				<!-- <bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.node2.ip}"/>
					<constructor-arg index="1" value="${redis.node2.port}"/>
					<property name="password" value="${redis.node1.password}"/>
				</bean> -->
			<!--</list>
		</constructor-arg>
	</bean>
	 -->
<!-- 配置方式二二二二二开启spring缓存注解-->
	<!-- 开启缓存注解 -->  
  <cache:annotation-driven cache-manager="cacheManager"/>   
         <!-- 自动扫描包 -->  
    <context:component-scan base-package="com.gafker.manage" />
        <!-- jedis 连接池配置参数：  -->  
        <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
            <property name="maxTotal" value="100"></property>  
            <property name="maxIdle" value="25"></property>  
            <property name="MaxWaitMillis" value="15000"></property>  
            <property name="testOnBorrow" value="false"></property>  
            <property name="testOnReturn" value="false"></property>  
        </bean>  
        <!-- jedis 客户端连接工厂 -->  
        <bean id="jedisConnectionFactory"   
            class='org.springframework.data.redis.connection.jedis.JedisConnectionFactory'>  
            <property name="hostName" value="${redis.node1.ip}"/>  
            <property name="port" value="${redis.node1.port}"/>  
            <property name="poolConfig" ref="poolConfig"/>  
            <property name="usePool" value="true"/>  
            <property name="password" value="${redis.node1.password}"/>  
        </bean>     
        <!-- redisTemplate  redisTemplate是对Jedis的对redis操作的扩展，有更多的操作，封装使操作更便捷  -->  
        <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"   
         p:connection-factory-ref ="jedisConnectionFactory">
         <property name="keySerializer">  
           <bean  
               class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
       </property>  
       <property name="valueSerializer">  
           <bean  
               class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
       </property>
         </bean>  
        <!-- 缓存管理器: 使用redis 当做缓存 -->  
         <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
         	<constructor-arg index="0" ref="redisTemplate"></constructor-arg>
         	</bean> 

</beans>
